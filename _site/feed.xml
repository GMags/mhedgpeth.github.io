<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hedge-ops</title>
    <description>Operational excellence through operation and culture</description>
    <link>http://hedge-ops.com/</link>
    <atom:link href="http://hedge-ops.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 03 Sep 2016 13:21:25 -0500</pubDate>
    <lastBuildDate>Sat, 03 Sep 2016 13:21:25 -0500</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title></title>
        <description>&lt;p&gt;In the past whenever I’ve tried to solve a technical problem, the first thing I would do is &lt;a href=&quot;http://hedge-ops.com/christmas-with-russians/&quot;&gt;find the right tool for the job&lt;/a&gt;. I would then test that tool against the known use cases, share it with others in the organization, and see if excitement warrants further consideration. If we’re spending a lot of money, the vendor will get involved and help push everyone toward a decision to go with the tool.&lt;/p&gt;

&lt;p&gt;The phase is so exciting, so full of promise…&lt;/p&gt;

&lt;p&gt;And often completely misguided.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Instead of starting with the tool, I’ve learned that I need to start with the business and the problems its leaders face. Once we all agree to the problems and have a clear, shared, measurable view of those problems, we can then determine the right tool for the job.&lt;/p&gt;

&lt;p&gt;Recently I was in a meeting about &lt;a href=&quot;http://hedge-ops.com/intrinsic-motivators-leading-to-chef/&quot;&gt;Chef&lt;/a&gt; with a colleague who is not very interested in adopting Chef for his project. He doesn’t see how Chef fits with his operational goals for next year. He was talking about his main pain points being the a greater need for operational visibility into his entire stack of hundreds of nodes. So I asked him, “what if we helped you solve that problem with a greater focus on monitoring?” He paused and said to me “I thought this meeting was about Chef.”&lt;/p&gt;

&lt;p&gt;Once the meeting and discussion becomes about the tool, you’re no longer having the right conversation. Start with the problems, and find good solutions that fit those problems. Repeat.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Sep 2016 13:21:25 -0500</pubDate>
        <link>http://hedge-ops.com/2016-01-15-dont-start-with-tools</link>
        <guid isPermaLink="true">http://hedge-ops.com/2016-01-15-dont-start-with-tools</guid>
        
        
      </item>
    
      <item>
        <title></title>
        <description>&lt;p&gt;My son has felt negative about everything lately which has created for him a vicious cycle of disdain and despair. &lt;a href=&quot;http://hedge-ops.com/embrace-difficulty/&quot; title=&quot;Embrace Difficulty&quot;&gt;He is a lot like me&lt;/a&gt;, so whenever we learn a lesson about him, it usually has something to do with &lt;a href=&quot;http://hedge-ops.com/failure-the-catalyst/&quot; title=&quot;Failure the Catalyst&quot;&gt;how I’m wired as well&lt;/a&gt;. He and I sat in bed a few nights ago and I walked him through this very basic method of how leaders have a choice to make:&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;First, I talked about how he and I are gifted with the ability to think deeply about things and thus we see things that other people don’t see.&lt;strong&gt; We have the responsibility of being able to see problems that other people don’t see.&lt;/strong&gt; Something that bothers him is how his cub scout pack meetings spend too much time talking to the parents and that leaves him feeling like the meeting isn’t his. When I asked one of his good friends about cub scouts, his friend said, “It’s good.”&lt;/p&gt;

&lt;p&gt;I’m cursed as well about seeing problems everywhere. I talked to a police officer one time that told me that every room he goes into, even if it’s a church sanctuary, he automatically tries to ascertain who in that room is a potential threat. That man has a similar curse: he sees problems that other people don’t see.&lt;/p&gt;

&lt;p&gt;I then asked Samuel why he thought President Obama wanted to be President. “Because he wanted to be famous.” I told him how there are better ways of being famous. The truth is Mr. Obama became President Obama because he saw problems that others didn’t see and cared enough about them to get in public life. &lt;strong&gt;A leader always starts with a perception of something wrong in the world.&lt;/strong&gt; If nothing was wrong, there would be no leaders.&lt;/p&gt;

&lt;p&gt;So it’s a given that a potential leader sees problems. It is our curse. The question now, is: what are we going to do about it? There are two choices:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A potential leader _could _choose the path of negativity, disdain, and ultimately despair.&lt;/strong&gt; This is the path of the critic, the internet troll, or the quitter. This is the path my son was on and one I’ve been on many times. I can see what’s wrong with the situation, and my response is to continue to criticize or believe that nothing will ever change and quit. It’s even easier to do this when _I’m the only one who sees the problems! _Well of course you’re the only one who sees the problems; perhaps that’s because you’re the one who is supposed to do something about it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Or a potential leader _could _choose the path of taking action, improvement, patience, and love.&lt;/strong&gt; In other words &lt;strong&gt;a potential leader could choose the path of leadership.&lt;/strong&gt; This is the path I encouraged Samuel to take. The question isn’t what problems do you see with cub scout pack meetings; the question is what are you going to do about those problems? When you see a problem with a group of people, the loving thing you can do is, within your power, help solve that problem with them! It’s not to despair and quit.&lt;/p&gt;

&lt;p&gt;Sometimes problems are so deep and impenetrable that there is nothing you can do about them. At that point the best thing to do _is _quit. However, most times the problems are there and as a leader we can work to make them better. That’s the path of leadership, the path of people who are cursed with the ability to recognize problems that others don’t see and choose to take action to solve those problems.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Sep 2016 13:21:25 -0500</pubDate>
        <link>http://hedge-ops.com/2015-01-30-my-sons-choice-between-negativity-and-taking-action</link>
        <guid isPermaLink="true">http://hedge-ops.com/2015-01-30-my-sons-choice-between-negativity-and-taking-action</guid>
        
        
      </item>
    
      <item>
        <title></title>
        <description>&lt;p&gt;We want our lives to be &lt;a href=&quot;http://hedge-ops.com/life-is-art/&quot; target=&quot;_blank&quot;&gt;a work of art&lt;/a&gt; and reflect the beauty and meaning of our values. Most of us in search of meaning in our lives will naturally absorb our culture’s script for us:&lt;!--more--&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;To create a beautiful work of art, you must feel good. To feel good, first you must make good money. You need to go to school and then get a good, stable job.&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;Once you get the job, start maximizing convenience. Pay for things you no longer want to do, including mowing the lawn, making meals, washing your car, fixing your house, going to the store. You work hard so you don’t have to do these things.&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;Also, make sure you are as comfortable as possible. Get a nice big house you can be comfortable in, a nice, new car with leather seats that feel great, and stop at the ice cream store and give yourself a treat that makes you feel like a kid again. You deserve it because you work hard.&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;You won’t be happy unless other people respect and want to be like you. So when you get a car, get something that will show everyone how hard you have worked. When you go on vacation, make sure it’s something totally awesome that will show how you have great taste and can afford the finer things in life. You want to be the best you can be. You’ve worked hard for this.&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;You need to be happy. That’s what life is about. So make as much money as possible and spend that mainly on three things: convenience so you can focus on the things that really matter, comfort so you won’t be distracted by annoyances and pain and can focus on enjoying life, and respect so you can be validated that you have done something meaningful with your life.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What’s wrong with this? Well, nothing if it works. The problem is, when we think through this approach we don’t actually see anyone reaping its benefits. Instead we see millionaires that need more. Actors who are on drugs. Affairs. It’s an absolute mess out there. There’s never an end. There’s never enough.&lt;/p&gt;

&lt;p&gt;This isn’t a good way to create a life of meaning and value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s a great way to sell stuff though.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This script does nothing about the biggest human problem: &lt;strong&gt;no matter how much you have today, you always need more.&lt;/strong&gt; Once you realize that, the above description becomes silly. &lt;a href=&quot;https://www.youtube.com/watch?v=uEY58fiSK8E&quot; target=&quot;_blank&quot;&gt;You’ll never have too much convenience&lt;/a&gt;. No matter how much comfort you have, you know people who have more and that makes you feel…uncomfortable. There will always be someone who gets more respect than you do. Your needs are &lt;em&gt;insatiable.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is unavoidable.&lt;/p&gt;

&lt;p&gt;The solution?** Accept insatiability as a fact of life,** dealing with it on a regular basis, and you will have a shot at sanity. How do you do this? Keep reading to find out.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Sep 2016 13:21:25 -0500</pubDate>
        <link>http://hedge-ops.com/2014-08-22-our-cultures-script</link>
        <guid isPermaLink="true">http://hedge-ops.com/2014-08-22-our-cultures-script</guid>
        
        
      </item>
    
      <item>
        <title>Finding Alignment</title>
        <description>&lt;p&gt;I’ve got a lot of things on my plate right now, but let me be clear: I’m not going to stand in the way of what the business wants to do.”;&lt;/p&gt;

&lt;p&gt;I’ve been told this many times before. In the early days of trying to create alignment for initiatives that are important to our strategy, I would have taken it as a sign of support. Instead, I translate it into what this same person would say to her boss about this same subject.&lt;/p&gt;

&lt;p&gt;“Michael came and talked to me about [Awesome Initiative]. (Sigh) He says it’s going to really change things for us. Are we really going to waste our time with this crap or are we going to serve our customers? I’ll do whatever, but fair warning: this project has ‘disaster’ written all over it, and you won’t get that feature you’ve been asking for either, you can kiss that goodbye for this year.”;&lt;/p&gt;

&lt;p&gt;That’s quite a different story, isn’t it?&lt;/p&gt;

&lt;p&gt;So how to respond? I’ve been tempted in the past to write people off and try to do it anyways. I’ve found over the years though that this is a mistake, because a sufficiently motivated individual _can _and _will _destroy your project if they don’t feel listened to.&lt;/p&gt;

&lt;p&gt;I’ve found that the keys are** respect** and** empathy**.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Respect&lt;/strong&gt; can’t be faked. I can’t _really _only respect my opinion, or those of the consultants I’m working with, and then merely try to get _you _on board with _my _project. That doesn’t work. People see past that. Instead, I need to walk into the relationship with the understanding and true belief that you are a smart person with real needs that may be solvable by what I’m working on. This is a discovery of where your needs meet my solutions. I’m open to changing my solution because I cannot possibly predict all of your needs without your iterative interaction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Empathy&lt;/strong&gt; is key because I really need to _feel _what you’re feeling, from a business perspective, and even from a personal perspective. What makes you excited or happy? What are you afraid of? What is painful for you? How does that affect you? Is there anything I can do to help you with that?&lt;/p&gt;

&lt;p&gt;Following this pattern has led me to understand that, at a generic level, different groups have a natural alignment and misalignment with DevOps:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Team&lt;/th&gt;
      &lt;th&gt;Natural Alignment&lt;/th&gt;
      &lt;th&gt;Natural Misalignment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Development&lt;/td&gt;
      &lt;td&gt;Faster Delivery of features&lt;/td&gt;
      &lt;td&gt;Have to be engaged in operations, more “work” to do&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Operations&lt;/td&gt;
      &lt;td&gt;Less fires, more consistency&lt;/td&gt;
      &lt;td&gt;Have to learn a new skillset and be a beginner&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Security&lt;/td&gt;
      &lt;td&gt;More consistency, compliance&lt;/td&gt;
      &lt;td&gt;Automation can cause unknown vulnerabilities&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Business&lt;/td&gt;
      &lt;td&gt;Faster ROI for development, lower cost for operations, and a scale model that works&lt;/td&gt;
      &lt;td&gt;Takes ongoing investment in culture and tools&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As I focus on respect and empathy I can find the natural alignment and mitigate the natural misalignment with each group.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For developers&lt;/strong&gt; we can help them deliver features faster and thus get a truly agile feedback loop. But we can also help them culturally begin to share the ownership of the operatability of their product with the operations team. The key is ensuring that their desire for consistency and velocity outweighs their disdain for caring about how it works in production. We do this by finding their pain points in operations, catch them _blaming _operations for those pain points, then show them that they actually can do something about their problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For QA&lt;/strong&gt; we can help them deliver features more safely by minimizing the amount of time they spend creating environments and ensuring that they have consistent, hardened environments. This is all exciting, but they must engage the other teams to define infrastructure and they must be willing to not be lazy and just “click the damn checkbox”; in IIS when they want something changed. Culturally they shouldn’t have a problem with this, but in reality QA always gets changes at the end of a release or sprint and is under a time crunch to ensure quality. So we work with them to show them how much time they are spending on this and how we can use automation to get them focused on the important stuff: ensuring quality in a way that computers can’t or writing automation against production-like environments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For Operations&lt;/strong&gt; we can help them avoid the unexpected problems that come about without good automated configuration management. But to them, it comes at a cost. Many of the things that made them successful (incident resolution, working crazy hours, following directions) aren’t compatible with creating and engaging with automation. So they have to be fine with starting from scratch and building themselves back up. They have to see a payoff if they’re going to take that kind of career and time risk. The payoff in my mind is that they get to do more valuable work for the business by automating things and that value will translate into a more rewarding job for them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For Security&lt;/strong&gt; we can help them achieve the consistency and compliance at all levels that has alluded them. Yes they have controls defined and exercised in production. But they struggle with other teams thinking of them as a blocker to progress. Also, as we automate more, they’re afraid that we are going to take &lt;a href=&quot;http://www.dailymail.co.uk/news/article-3022707/Worst-valet-Hapless-garage-attendant-destroys-300-000-Ferrari-599-GTO-bringing-round-owners-hit-accelerator-instead-brake.html&quot;&gt;this nice shiny devops Ferrari and wreck it into a wall.&lt;/a&gt; So we work on automating compliance and on developing a change management process that ensures proper control and separation of duties into production. We don’t fight them. We work with them to achieve &lt;em&gt;their&lt;/em&gt; goals. Once this happens, the perceived “blocker”; becomes a champion and driver of our changes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For Management&lt;/strong&gt; they get the benefits outlined above. But they also have to lead a cultural transformation. We can’t do it the easy way when that means “just running the command”; or “clicking that checkbox over there”;. We have to be committed to a repeatable, auditable process for change. So we need to train the people we have with new skills and be patient as they figure this out. We need to be OK with someone spending a little while on automating that thing, because the payoff will be huge over the next few years. And we need to be OK with absorbing the cost of tooling and vendor partnerships to realize the dream.&lt;/p&gt;

&lt;p&gt;Once we see the lay”way, it’s much easier to get everyone to the goal together. While I can’t guarantee that one won’t encounter the statement at the beginning of the post, I can guarantee that following this model will give someone something _constructive _to do afterwards.&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Jun 2016 03:00:59 -0500</pubDate>
        <link>http://hedge-ops.com/finding-alignment/</link>
        <guid isPermaLink="true">http://hedge-ops.com/finding-alignment/</guid>
        
        
        <category>culture</category>
        
      </item>
    
      <item>
        <title>Finding Habitat</title>
        <description>&lt;p&gt;A few months ago I caught up with Julian Dunn in Ghent about what he was up to. His &lt;a href=&quot;https://www.youtube.com/watch?v=kfF9IATUask&quot;&gt;talk on orchestration&lt;/a&gt; was instrumental in forming &lt;a href=&quot;/orchestration-maturity-model-with-chef/&quot;&gt;our approach&lt;/a&gt; to solving the problem with Consul and his &lt;a href=&quot;http://www.juliandunn.net/2015/12/04/the-oncoming-train-of-enterprise-container-deployments/&quot;&gt;blog post on docker&lt;/a&gt; showed me he was thinking deeply and critically about some interesting topics. I reached out to him to learn more about what he was up to and spent some time with him to learn about Habitat.&lt;/p&gt;

&lt;p&gt;When I learned that Fletcher Nichol was also working on the project, I got even more excited. Fletcher’s work on &lt;a href=&quot;http://kitchen.ci/&quot;&gt;Test Kitchen&lt;/a&gt; has &lt;a href=&quot;/test-kitchen-required-not-optional/&quot;&gt;revolutionized our workflow&lt;/a&gt;. Recently, I saw it lower the barrier to entry for &lt;a href=&quot;http://www.anniehedgie.com/&quot;&gt;my wife&lt;/a&gt; to learn Chef. There really is a “before Kitchen” and “after Kitchen” epoch in her learning. It’s that revolutionary. And to see that Fletcher was focusing on this problem as well was quite exciting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.chef.io/blog/2016/06/14/introducing-habitat/&quot;&gt;Adam Jacob’s blog post &lt;/a&gt; left me both intrigued me and a little confused. I wanted to understand what Habitat was and how it fit into Chef’s infrastructure and strategy. So I watched the event and got on twitter and had a fun time figuring it out.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;It was clear to me even from my early talks with Julian that Habitat was a disruptive technology. This is yet another reason why &lt;a href=&quot;/technology-partnership/&quot;&gt;Chef is such a good partner for us&lt;/a&gt;. I can trust them to prioritize _the right solution _for me over whether this will help their sales numbers this quarter. That trust drives sales higher than other companies because navigating this journey is difficult and we need people on our side who will tell us the hard truths on how to arrive at our destination. So kudos to Chef and its leadership for being so brave to make this step that says “there’s another aspect to the problem that could be better, here’s what we think”&lt;/p&gt;

&lt;p&gt;Unfortunately, the initial message of Habitat didn’t resonate with me. I feel that it suffered from a few flaws that hurt it’s ability to resonate with enterprise customers like me:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;You’re doing it wrong&lt;/strong&gt;. I reread the narrative about the siloed enterprise and the big web and am still struggling to understand it. What I felt initially is “how you have been approaching the problem of configuration management is all wrong.” I’m honestly not sure whether that should have been the feeling I got because honestly I still don’t understand the narrative they were going for. I do know that a good pitch to enterprise people _should not _start with the message “your organization is fundamentally improperly structured” People don’t like to hear that. And even if they agree, there is nothing they can do about it. The message (intended or not) isn’t necessary because Habitat doesn’t ask you to change any of that (see my revised message below).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Here is a Cool Solution.&lt;/strong&gt; And it is. You put some really great people on this project for months or more, I expect it to be cool. But from an enterprise perspective its coolness carries little weight on whether it will help us solve the problems we are having. I would have preferred some discussion on what outcomes the team was able to accomplish as they partnered with an early customer, preferably from the enterprise. What did they do? Is it better? Why? Without this context it was difficult to put the solution in context.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Context?&lt;/strong&gt; This was the part I struggled with the most. How does Habitat fit into the Chef ecosystem? Where does it start and Chef begin? What problems does it solve that _both _products could solve? Why would I choose one over the other? It was difficult to understand, especially over the medium of twitter where characters are limited and tone isn’t easily communicated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Am I still excited about Habitat? Absolutely! After talking with a few people and with Julian for 15 minutes or so, I can now think about it in terms that make sense to me that I can share with others in our organization. In the spirit of providing alternatives when sharing problems, &lt;strong&gt;here’s the pitch I would give if someone in my organization would ask me about it today&lt;/strong&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Chef’s has done an outstanding job with configuration management of infrastructure. This is why they are our partner. They have built upon that core competency with a reporting product to see what’s happening and a delivery product to manage changes. On top of that (and most importantly for us), they even help make your infrastructure more secure by helping you scan your infrastructure for security vulnerabilities and use Chef to remediate them. With Chef it is very easy to get a secure, hardened infrastructure configured for your business.&lt;/p&gt;

  &lt;p&gt;That’s not all you want to do, though. You want applications _running _on that infrastructure. And it turns out when you start down this path, things get complicated quickly. You face problems that aren’t _really _configuration management problems like orchestration or service discovery. You have to figure out how to scale. And you have an application team that wants to focus on _those issues _rather than configure a specific machine to run. They might even insist on _not _running a production-like machine for their development by insisting that they use docker to speed up development. How do you engage the application team in a way that helps them own their solution and use it, then deliver that automation to a broader ecosystem in a meaningful way?&lt;/p&gt;

  &lt;p&gt;Enter Habitat. With Habitat, your application team can define availability, upgrade, red/green deployments, and other application-level-concerns and package that _with the application _and deliver it to their target environments. This means that Chef can focus what it’s good at: configuration management of the infrastructure. A habitat package can live as a docker container on a development machine, a minimal QA environment, or as a full-blown linux node which was also configured using Chef.&lt;/p&gt;

  &lt;p&gt;It’s tempting to try to find the one solution that will solve all of your problems. Many times that leaves you doing _a lot of work _as you try to solve a problem with a solution that was not meant to solve those types of problems. Instead, it’s totally fine to have a solution to the application’s problems and a different solution for the infrastructure problems. As long as both solutions start with code, are tested early and often, and meet together very quickly, we can take advantage of their differentiated power.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This, to me is Habitat’s story and is what makes me so excited for its future and so happy that I’m a partner with Chef.&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Jun 2016 02:39:22 -0500</pubDate>
        <link>http://hedge-ops.com/finding-habitat/</link>
        <guid isPermaLink="true">http://hedge-ops.com/finding-habitat/</guid>
        
        
        <category>automation</category>
        
      </item>
    
      <item>
        <title>Disruption is Uncomfortable</title>
        <description>&lt;p&gt;The other day we were doing an urgent Chef policy update in our production environment. It quickly became clear to all that this was uncomfortable. I had written extensive documentation to explain, as I saw it, how interact with Chef within our system. The person who was assigned the task, however, wasn’t able to make much sense of my documentation. So we had an awkward back and forth where he was asking me for the commands he should run and I was telling him that he should know what he is doing when running those commands. It was all very uncomfortable.&lt;/p&gt;

&lt;p&gt;So I talked to a colleague about it who reminded me: “Hey Michael, you’re doing something disruptive here, you shouldn’t be surprised when it is…disruptive”&lt;/p&gt;

&lt;p&gt;Oh yeah.&lt;/p&gt;

&lt;p&gt;I then calmed down, got another colleague on my immediate Chef team on a call, and we figured out a better way to bring people on board with the process. We didn’t get angry. We didn’t go to lunch and talk about how idiotic that other team was. We realized that disruption is uncomfortable, so we can empathize with that and help people along.&lt;/p&gt;

&lt;p&gt;I think this has been a major part of my job: helping people through the discomfort of change that DevOps presents to their status quo.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jun 2016 03:00:54 -0500</pubDate>
        <link>http://hedge-ops.com/disruption-is-uncomfortable/</link>
        <guid isPermaLink="true">http://hedge-ops.com/disruption-is-uncomfortable/</guid>
        
        
        <category>culture</category>
        
      </item>
    
      <item>
        <title>Premature Optimization</title>
        <description>&lt;p&gt;I was talking to a colleague the other day who is working on a centralized initiative that has the potential to do a lot for our organization. He’s excited. He’s going to meetings, &lt;a href=&quot;/alignment/&quot;&gt;getting alignment&lt;/a&gt;, &lt;a href=&quot;/funding/&quot;&gt;getting funding&lt;/a&gt;. In it all, leaders are asking him for a &lt;a href=&quot;/the-grand-vision/&quot;&gt;grand vision&lt;/a&gt; that will bring all the disparate parts together into a coherent whole. He delivered that grand vision in the form of a plan that would bring a set of solutions together to satisfy what all stakeholders are asking for.&lt;/p&gt;

&lt;p&gt;I’ve been in that situation myself in the past. It’s all very exciting. Every meeting you have has a sense of purpose and direction. You are _finally _bringing this change to the organization that it so desperately needs.&lt;/p&gt;

&lt;p&gt;Unfortunately, in the past, I’ve missed the reality that the only thing that is known is the next one or two things that need to be done to improve the current situation. The grand vision might be needed to bring the needed alignment and funding into the situation. But if that vision removes me from the stark reality that if I don’t act upon the improvement opportunities that stand before me _right _now with a high level of urgency, I will not end up making the transformative change that I am promising to everyone.&lt;/p&gt;

&lt;p&gt;I might still deliver a tool. I might even declare “Mission Accomplished” as I do. But without a flow of improvements that have the regular engagement of all stakeholders, the tool or initiative is destined to have little effect.&lt;/p&gt;

&lt;p&gt;People say it’s bad to prematurely optimize code. It’s just as bad to prematurely optimize solutions. Make your solutions fit the problem you’re facing today, and give enough vision to provide the direction needed to keep it going in the right direction.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jun 2016 03:00:28 -0500</pubDate>
        <link>http://hedge-ops.com/premature-optimization/</link>
        <guid isPermaLink="true">http://hedge-ops.com/premature-optimization/</guid>
        
        
        <category>culture</category>
        
      </item>
    
      <item>
        <title>Promoting Cookbooks into a Private Chef Supermarket with TeamCity</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://hedge-ops.com/my-advice-for-chef-in-large-corporations/&quot;&gt;We want the ability to control&lt;/a&gt; which versions of which cookbooks we rely on and that those cookbooks are available to us even if the author removes them from GitHub. In fact with &lt;a href=&quot;http://www.theverge.com/2016/3/24/11300840/how-an-irate-developer-briefly-broke-javascript&quot;&gt;the recent craziness on dependency management&lt;/a&gt; and after listening to &lt;a href=&quot;https://www.arresteddevops.com/availability/&quot;&gt;an episode on availability on Arrested DevOps,&lt;/a&gt; I’m starting to think that this isn’t just for large organizations like mine.&lt;/p&gt;

&lt;p&gt;So to protect ourselves from that kind of craziness, we have created a &lt;a href=&quot;https://www.chef.io/blog/2015/12/31/a-supermarket-of-your-own-running-a-private-supermarket/&quot;&gt;private chef supermarket&lt;/a&gt; that we host all dependencies on. Then in our policyfiles, we specify that private supermarket as our default source for finding cookbooks.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;At first, to get us started, we manually uploaded the cookbooks we needed and got to working. Then as we scaled we got tired of people asking us to upload another version. On top of that we want to have a good, clean process for approving external cookbooks/code into our blessed environment. Here’s how we implemented it:&lt;/p&gt;

&lt;h2 id=&quot;synchronize-github-with-internal-git-server&quot;&gt;1: Synchronize GitHub with internal Git server&lt;/h2&gt;

&lt;p&gt;We have an internal, corporately blessed git server we use, so we needed to get what was in GitHub into that Git server. For each of the cookbooks, we create a TeamCity &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Build+Configuration&quot;&gt;build configuration&lt;/a&gt; (that’s based on a &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Build+Configuration+Template&quot;&gt;template&lt;/a&gt;) that does just this with a simple &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Command+Line&quot;&gt;Command Line runner&lt;/a&gt; (that runs in Windows only at the moment):&lt;/p&gt;

&lt;pre class=&quot;lang:default decode:true &quot;&gt;mkdir %Repository Name%.git
git clone --mirror %Github Clone URL%
cd %Repository Name%.git
git remote add stash %Stash Clone URL%
git push --all stash
git push --tags stash&lt;/pre&gt;

&lt;p&gt;There are three variables that are &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Configuring+Build+Parameters&quot;&gt;defined as parameters&lt;/a&gt; here:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Repository Name: the name of the git repository, like &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;chef-client&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Github Clone URL: the URL to clone the git on GitHub, like &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;https://github.com/chef-cookbooks/chef-client&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Stash URL: the URL to push the code to internally&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I had to go into our internal Git server and create a repo with the same name as the GitHub one so something could be pushed.&lt;/p&gt;

&lt;p&gt;I then &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Configuring+Build+Triggers&quot;&gt;schedule this to run every day&lt;/a&gt;, and let it do its thing. If I got crazy I could make it run everytime there was a checkin on github, but the model doesn’t _have _to have immediacy to it. My repository internally will be reasonably up to date.&lt;/p&gt;

&lt;h2 id=&quot;create-an-internally-approved-branch-based-on-a-tag&quot;&gt;2: Create an internally approved branch based on a tag&lt;/h2&gt;

&lt;p&gt;The next thing we do is create a new branch on our internal git server that outlines what we have code reviewed and have approved to be a part of our infrastructure. During the first setup, we first clone the repo on our local machine with the internal git server:&lt;/p&gt;

&lt;pre class=&quot;lang:default decode:true &quot;&gt;git clone http://mycompanygitserver.com/chef-client.git&lt;/pre&gt;

&lt;p&gt;Then we simply run these commands:&lt;/p&gt;

&lt;pre class=&quot;lang:default decode:true &quot;&gt;git checkout -b mycompany-approved v4.3.2
git push origin mycompany-approved&lt;/pre&gt;

&lt;p&gt;This creates our “safe” branch, from which our promotion can occur.&lt;/p&gt;

&lt;h2 id=&quot;run-cookbook-build-just-as-with-other-cookbooks&quot;&gt;3: Run cookbook build just as with other cookbooks&lt;/h2&gt;

&lt;p&gt;The cookbook build will run as I outlined in &lt;a href=&quot;http://hedge-ops.com/chef-cookbook-builds-in-teamcity/&quot;&gt;a different post&lt;/a&gt;. The only difference is the VCS Root that I pull will be off of the &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;mycompany-approved&lt;/span&gt;  branch created above.&lt;/p&gt;

&lt;h2 id=&quot;promote-cookbook-to-supermarket&quot;&gt;4: Promote cookbook to supermarket&lt;/h2&gt;

&lt;p&gt;Then I promote a cookbook to the supermarket using a TeamCity template that I use for all cookbook promotions, which is basically this command:&lt;/p&gt;

&lt;pre class=&quot;lang:default decode:true &quot;&gt;knife supermarket share %cookbook_name% &quot;Other&quot; -o .&lt;/pre&gt;

&lt;p&gt;I had to ensure that the &lt;span class=&quot;lang:default decode:true crayon-inline &quot;&gt;knife-supermarket&lt;/span&gt;  gem was installed on my build server (of course, configured by chef as well). Also I parameterized the cookbook name so this could be inside of a template that can be reused everywhere.&lt;/p&gt;

&lt;p&gt;The cookbook also has a &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Snapshot+Dependencies&quot;&gt;snapshot dependency&lt;/a&gt; to the cookbook build above, ensuring that it is only released to our supermarket when it passes the build. That keeps everyone honest.&lt;/p&gt;

&lt;h2 id=&quot;merge-into-approved-branch-as-people-request&quot;&gt;5: Merge into approved branch as people request&lt;/h2&gt;

&lt;p&gt;People will still request that we merge into the approved branch, which is locked down so that a smaller team can approve of the changes. We can use a pull request model to review and audit how this happens.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Doing it this way gave us the most control over which changes go into our infrastructure. It avoids the public supermarket alltogether, because we found that the packages posted on that server cannot be pushed to another supermarket. Even if that problem were fixed, this way is superior because it gives us the ability to code review and audit every dependency we have going into our system.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Apr 2016 03:01:34 -0500</pubDate>
        <link>http://hedge-ops.com/promoting-cookbooks-into-a-private-chef-supermarket-with-teamcity/</link>
        <guid isPermaLink="true">http://hedge-ops.com/promoting-cookbooks-into-a-private-chef-supermarket-with-teamcity/</guid>
        
        
        <category>chef</category>
        
        <category>teamcity</category>
        
        <category>pipeline</category>
        
      </item>
    
      <item>
        <title>Orchestration Maturity Model with Chef</title>
        <description>&lt;p&gt;One of our &lt;a href=&quot;http://hedge-ops.com/proof-of-concept/&quot;&gt;earliest questions&lt;/a&gt; about configuration management tools is how we would do orchestration with them. We realized early on that with chef the orchestration story was fairly weak, especially compared with something like &lt;a href=&quot;http://saltstack.com/&quot;&gt;salt&lt;/a&gt;. But chef’s &lt;a href=&quot;http://hedge-ops.com/technology-partnership/&quot;&gt;other benefits&lt;/a&gt; outweighed the weaknesses so we moved forward.&lt;/p&gt;

&lt;p&gt;The whole time though I was confused about why Chef hadn’t invested more in orchestration. Salt and Ansible has it as a first class citizen and Puppet was &lt;a href=&quot;https://docs.puppet.com/pe/latest/app_orchestration_overview.html&quot;&gt;actively adding it to its product&lt;/a&gt;. I didn’t really “get” it until I listened to Julian Dunn’s &lt;a href=&quot;https://www.youtube.com/watch?v=kfF9IATUask&quot;&gt;excellent presentation&lt;/a&gt; on it at Ghent.&lt;/p&gt;

&lt;p&gt;Chef, as a company, is more interested in giving you what will work for you than giving you what you’re asking for. This is what makes them such a special partner for us. They’re more of a coach and less of an enabler. This has led me to think of orchestration as a maturity journey through three phases:&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;phase-1-do-it-like-before&quot;&gt;&lt;strong&gt;Phase 1: Do it Like Before!&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The first phase of orchestration will be to model how you have been doing things before. OK, I need to stop services, copy files, start services. That’s orchestration, right?&lt;/p&gt;

&lt;p&gt;At a surface level this is fine, but it leaves out the edge cases that happen when you’re dealing with a scaled infrastructure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What happens when a node was down and didn’t get the message to stop, and then comes back up in the middle of your upgrade, and starts?&lt;/li&gt;
  &lt;li&gt;What happens when a new node is added at a time when  you’re not doing an upgrade? Are any of those orchestration commands critical to the node itself?&lt;/li&gt;
  &lt;li&gt;Are you splitting configuration management between your configuration management tool _and _your orchestration? If you are directly stopping a service, THEN running chef later, then your configuration management is leaking out of your system and into other places.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;phase-2-declaratively-manage-state&quot;&gt;&lt;strong&gt;Phase 2: Declaratively Manage State&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;If we’re writing chef recipes and starting from the beginning with some infrastructure, why live with the limitations of Phase 1? Why don’t we solve this problem? Thankfully with a tool like &lt;a href=&quot;https://www.consul.io/&quot;&gt;consul&lt;/a&gt; we can solve the problem by making some subtle changes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a real-time shared data view of the state of your system (with consul, &lt;a href=&quot;https://zookeeper.apache.org/&quot;&gt;zookeeper&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Using this shared data view, define _all _desired states of the system. So if you need to transition your web cluster from the states of: off, waiting, converged, set that in your key value store&lt;/li&gt;
  &lt;li&gt;Write your chef recipe to define the desired state (resources) that are compiled &lt;em&gt;based on the desired state defined in the shared data view&lt;/em&gt;. So you have an if statement that says “if we want this thing to be off right now, there is a service resource with action of ‘off’”&lt;/li&gt;
  &lt;li&gt;Write an orchestrator that manages the state transitions between nodes in the environment &lt;em&gt;by updating the shared data view&lt;/em&gt;.  With consul we can do a consul_exec on our nodes to force chef to run. Or take it even further. And the orchestrator itself can be written through chef.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This gives you a number of benefits over the earlier phase:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If a node isn’t there when the state changes, it checks in and converges to the correct state, immediately! You _always _get the node at the right state in the process because they are sharing the latest up to date shared data view&lt;/li&gt;
  &lt;li&gt;If a node is added, it will also converge to the correct state. It checks in and catches up immediately. Now you don’t have to worry about adding nodes and coordinating that with upgrades; things will just happen.&lt;/li&gt;
  &lt;li&gt;All configuration management are belong to chef. Simple.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;phase-3-decouple-the-nodes&quot;&gt;&lt;strong&gt;Phase 3: Decouple the Nodes&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The unfortunate reality though, is that even after phase 2 you may not be ready for bursting and scale. In order for those capabilities to exist, you need to have services that are independent of each other. So it shouldn’t matter that your web tier is on a particular version and the database hasn’t caught up yet. The web tier should tolerate that reality. So you can then update them separately and not worry about it.&lt;/p&gt;

&lt;p&gt;I still think there is a role for real-time orchestration to happen in order to manage the portions of your infrastructure to go through a little at a time until all is upgraded. But the complexities of having to turn one layer off so another layer can do its thing should largely go away.&lt;/p&gt;

&lt;p&gt;Unfortunately this is really up to the software design itself to facilitate. Therefore, it’s really a business decision on whether that infrastructure should be made burstable and thus truly cloud-enabled. In some cases, we’ll only get as far as phase 2. In others we’ll go all the way, but probably camp out at phase 2 while the software catches up. That’s the way it should be: let’s get there little by little. As long as we’re going in the right direction, we’re good.&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Apr 2016 03:00:44 -0500</pubDate>
        <link>http://hedge-ops.com/orchestration-maturity-model-with-chef/</link>
        <guid isPermaLink="true">http://hedge-ops.com/orchestration-maturity-model-with-chef/</guid>
        
        <category>chef</category>
        
        <category>consul</category>
        
        <category>orchestration</category>
        
        <category>zookeeper</category>
        
        
        <category>insights</category>
        
      </item>
    
      <item>
        <title>Chef Cookbook Builds in TeamCity</title>
        <description>&lt;p&gt;As more and more teams are &lt;a href=&quot;http://hedge-ops.com/my-advice-for-chef-in-large-corporations/&quot;&gt;coming on board with Chef&lt;/a&gt;, I’ve began to standardize our pipeline and ensure that everyone meets quality gates for the infrastructure they are creating. This started with finally figuring out how to get &lt;a href=&quot;http://hedge-ops.com/test-kitchen-required-not-optional/&quot;&gt;Test Kitchen working with Windows&lt;/a&gt;, then quickly migrated to getting it running in &lt;a href=&quot;http://hedge-ops.com/christmas-with-russians/&quot;&gt;TeamCity&lt;/a&gt;. Our entire division uses TeamCity for configuration management, so it’s something that I needed to plan out carefully in order to make the Chef pipeline _feel _like it’s a part of a team’s normal build process.&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;project-structure&quot;&gt;Project Structure&lt;/h2&gt;

&lt;p&gt;With this in mind, we created a** Chef** &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Creating+and+Editing+Projects&quot;&gt;subproject&lt;/a&gt; _inside _of each team’s _existing _project. We want them to have ownership when Chef infrastructure breaks and to take action on problems, just as if the problem happened in their own software build.&lt;/p&gt;

&lt;p&gt;We then created a** Chef Cookbook** &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Build+Configuration+Template&quot;&gt;build template&lt;/a&gt; at the &lt;Root Project=&quot;&quot;&gt; level that all cookbooks can use for their own builds. This template defines a cookbook parameter that enables the build steps below to know where the cookbook is in source.&lt;/Root&gt;&lt;/p&gt;

&lt;h2 id=&quot;version-control-settings&quot;&gt;Version Control Settings&lt;/h2&gt;

&lt;p&gt;We’re not really sure about how we approach testing at the moment when it comes to dependencies. If a cookbook is very young or if we are testing a lot of things at once, we might want to use relative path dependencies to other cookbooks. Or we might want to use data bags at some level. So we’ve decided on the build agent itself to mimic a chef repo and then test it that way. We do this &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Build+Checkout+Directory#BuildCheckoutDirectory-Customcheckoutdirectory&quot;&gt;through a checkout rule&lt;/a&gt;, like this:&lt;/p&gt;

&lt;pre&gt;+:.=&amp;gt;cookbooks/contributors

&lt;/pre&gt;

&lt;p&gt;This means that the contributors cookbook will go to the cookbooks/contributors repo relative to build working directory.&lt;/p&gt;

&lt;h2 id=&quot;build-steps&quot;&gt;Build Steps&lt;/h2&gt;

&lt;h3 id=&quot;run-foodcritic&quot;&gt;&lt;strong&gt;1. Run Foodcritic&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;We want to do Chef liniting first before we get into further testing, so we run &lt;a href=&quot;http://www.foodcritic.io/&quot;&gt;foodcritic&lt;/a&gt;. This is done simply by creating a &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Command+Line&quot;&gt;Command Line runner&lt;/a&gt; with the foodcritic command:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-foodcritic-1.png&quot; rel=&quot;attachment wp-att-1155&quot;&gt;&lt;img class=&quot;aligncenter wp-image-1157 size-full&quot; src=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-foodcritic-1.png&quot; alt=&quot;&quot; width=&quot;875&quot; height=&quot;661&quot; srcset=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-foodcritic-1.png 875w, http://hedge-ops.com/wp-content/uploads/2016/03/run-foodcritic-1-300x227.png 300w, http://hedge-ops.com/wp-content/uploads/2016/03/run-foodcritic-1-768x580.png 768w&quot; sizes=&quot;(max-width: 875px) 100vw, 875px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;run-rubocop&quot;&gt;&lt;strong&gt;2. Run Rubocop&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Once foodcritic runs, we want to finish our cookbook linting with &lt;a href=&quot;http://batsov.com/rubocop/&quot;&gt;rubocop&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-foodcritic-1.png&quot; rel=&quot;attachment wp-att-1157&quot;&gt;&lt;br /&gt; &lt;/a&gt; &lt;a href=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-rubocop.png&quot; rel=&quot;attachment wp-att-1158&quot;&gt;&lt;img class=&quot;aligncenter wp-image-1158 size-full&quot; src=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-rubocop.png&quot; alt=&quot;run-rubocop&quot; width=&quot;872&quot; height=&quot;419&quot; srcset=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-rubocop.png 872w, http://hedge-ops.com/wp-content/uploads/2016/03/run-rubocop-300x144.png 300w, http://hedge-ops.com/wp-content/uploads/2016/03/run-rubocop-768x369.png 768w&quot; sizes=&quot;(max-width: 872px) 100vw, 872px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;run-cookbook-unit-tests&quot;&gt;&lt;strong&gt;3. Run Cookbook Unit Tests&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;I’m not a huge fan of &lt;a href=&quot;https://docs.chef.io/chefspec.html&quot;&gt;ChefSpec&lt;/a&gt; because I believe they mock too much out and end up not adding a lot of value. But I do think having at least one there that ensures that your code will converge is immensely helpful. It’s much better waiting the few seconds to ensure that code converges than the few minutes to wait for kitchen to tell you the same thing. So I put the step here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-chef-unit-tests.png&quot; rel=&quot;attachment wp-att-1159&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-1159&quot; src=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-chef-unit-tests.png&quot; alt=&quot;run-chef-unit-tests&quot; width=&quot;875&quot; height=&quot;635&quot; srcset=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-chef-unit-tests.png 875w, http://hedge-ops.com/wp-content/uploads/2016/03/run-chef-unit-tests-300x218.png 300w, http://hedge-ops.com/wp-content/uploads/2016/03/run-chef-unit-tests-768x557.png 768w&quot; sizes=&quot;(max-width: 875px) 100vw, 875px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update: actually just before this published, I removed this. The Chef Spec unit tests required too much ruby expertise to be helpful. Plus people are working well with kitchen and learn to rely on it instead. So as of yesterday, this step was removed.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;run-test-kitchen&quot;&gt;&lt;strong&gt;4.&lt;/strong&gt; &lt;strong&gt;Run Test Kitchen&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;And now for the magic! I need to &lt;a href=&quot;http://hedge-ops.com/test-kitchen-required-not-optional/&quot;&gt;run Test Kitchen&lt;/a&gt;. If I’m using vagrant, I need to have a physical build agent to do this on. &lt;a href=&quot;http://hedge-ops.com/tutorial-for-test-kitchen-with-azure/&quot;&gt;If I’m running azure&lt;/a&gt;, I need to have some credentials set up on the build agent. All of that configuration is handled through chef itself, so at this point all I need to do is run the command itself:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-test.png&quot; rel=&quot;attachment wp-att-1160&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-1160&quot; src=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-test.png&quot; alt=&quot;run-kitchen-test&quot; width=&quot;878&quot; height=&quot;666&quot; srcset=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-test.png 878w, http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-test-300x228.png 300w, http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-test-768x583.png 768w&quot; sizes=&quot;(max-width: 878px) 100vw, 878px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kitchen test will do a create, converge, and verify. It runs through the whole process. And I’ve tested that if it fails, the build will fail.&lt;/p&gt;

&lt;h3 id=&quot;kitchen-destroy&quot;&gt;&lt;strong&gt;5. Kitchen Destroy&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;If the above test fails, it’s important to not keep the virtual machine running. This is especially true if I’m using the azure runner. So at the end I’ll call kitchen destroy, and _always _call it, even if the previous command failed:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-destroy.png&quot; rel=&quot;attachment wp-att-1161&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-1161&quot; src=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-destroy.png&quot; alt=&quot;run-kitchen-destroy&quot; width=&quot;878&quot; height=&quot;621&quot; srcset=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-destroy.png 878w, http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-destroy-300x212.png 300w, http://hedge-ops.com/wp-content/uploads/2016/03/run-kitchen-destroy-768x543.png 768w&quot; sizes=&quot;(max-width: 878px) 100vw, 878px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;build-agent-setup&quot;&gt;Build Agent Setup&lt;/h2&gt;

&lt;p&gt;As I mentioned earlier, our build agents are set up through Chef itself, so configuration of them is easy. Since we are creating our Chef Projects inside of the product’s projects, we don’t want to mix their build agents with the chef ones. We keep them separated because we let each team have their own build agents that they manage. To solve for the mix, we add the** Chef** subproject set up above to our own Chef build &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Agent+Pools&quot;&gt;agent pool&lt;/a&gt;. Then in our template, we add a &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Agent+Requirements&quot;&gt;build agent requirement&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/chef-cookbook-requirement.png&quot; rel=&quot;attachment wp-att-1162&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-1162&quot; src=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/chef-cookbook-requirement.png&quot; alt=&quot;chef-cookbook-requirement&quot; width=&quot;508&quot; height=&quot;190&quot; srcset=&quot;http://hedge-ops.com/wp-content/uploads/2016/03/chef-cookbook-requirement.png 508w, http://hedge-ops.com/wp-content/uploads/2016/03/chef-cookbook-requirement-300x112.png 300w&quot; sizes=&quot;(max-width: 508px) 100vw, 508px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our recipe for the build agent, we set this environment variable, so this limits our cookbook builds to only run on build agents on which our chef recipe has run.&lt;/p&gt;

&lt;h2 id=&quot;triggering&quot;&gt;Triggering&lt;/h2&gt;

&lt;p&gt;Finally, we want to trigger this cookbook build whenever something in the cookbook is checked in. We do this through adding a &lt;a href=&quot;https://confluence.jetbrains.com/display/TCD9/Configuring+VCS+Triggers&quot;&gt;VCS trigger&lt;/a&gt; with the default settings to the template.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;With the template in place, it takes about ten minutes to add a team’s cookbook to be fully tested and built within their own environment. It feels very much like a software build, which is fantastic for everyone because it reminds us that the infrastructure code we are creating is like any other code; it should be subject to automation just like the rest.&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Apr 2016 03:00:50 -0500</pubDate>
        <link>http://hedge-ops.com/chef-cookbook-builds-in-teamcity/</link>
        <guid isPermaLink="true">http://hedge-ops.com/chef-cookbook-builds-in-teamcity/</guid>
        
        <category>chef</category>
        
        <category>chef spec</category>
        
        <category>foodcritic</category>
        
        <category>rubocop</category>
        
        <category>teamcity</category>
        
        <category>test kitchen</category>
        
        
        <category>tools</category>
        
      </item>
    
  </channel>
</rss>
